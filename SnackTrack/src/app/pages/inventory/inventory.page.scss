// Dashboard-like neutral styling
:host {
  --text: #1b1b1b;
  --muted: #6b7280;
  --card: #fff;
  --card-border: #e5e7eb;
  --radius: 12px;
  color: var(--text);
}

ion-content {
  --background: var(--ion-color-light-tint);
}

.inventory-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
}

/* Compact inventory grid (user requested 4x4, even on mobile) */
.inventory {
  width: 100%;
  --inventory-top-gap: 12px; /* default top spacing */
  margin-top: var(--inventory-top-gap);
}

/* Allow easy customization: keep columns at 4 by default */
/* Local inventory variables to avoid global override */
.inventory {
  --inventory-columns: 2; /* default desktop */
  --inventory-gap: 8px;
  --inventory-card-padding: 8px;
  --inventory-card-radius: 10px;
  --inventory-card-image-height: 72px; /* compact */
  --inventory-card-font-size: 12px;
}

.inventory .inventory-grid {
  display: grid;
  /* use fallback to 4 columns if variable missing */
  grid-template-columns: repeat(var(--inventory-columns, 2), 1fr);
  gap: var(--inventory-gap, 8px);
  width: 100%;
  box-sizing: border-box;
  /* ensure consistent row sizing so grid doesn't collapse into 1 column */
  grid-auto-rows: minmax(120px, auto);
}

/* show only about 4 rows and make container scrollable */
.content > .inventory {
  /* approximate per-card height: image + header + controls. adjust multiplier if you tweak card internals */
  --approx-card-height: calc(var(--inventory-card-image-height) + 84px);
  max-height: calc(var(--approx-card-height) * 4);
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  padding-right: 6px;
}

/* make each card compact and tight-packed */
.inventory-grid .card {
  padding: var(--inventory-card-padding);
  border-radius: var(--inventory-card-radius);
  margin: 0; /* remove margin between grid rows; gap handles spacing */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  min-height: 1px;
  box-sizing: border-box;
  width: 100%;
  max-width: 100%;
}

.inventory-grid .card ion-card-header,
.inventory-grid .card ion-card-content {
  padding: 4px 6px;
}

.inventory-grid .card__imgwrap {
  height: var(--inventory-card-image-height);
  width: 100%;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.inventory-grid .card__title {
  font-size: var(--inventory-card-font-size);
  line-height: 1.1;
  text-align: center;
  display: block;
}

/* badges and controls smaller */
.inventory-grid .card__badge {
  font-size: 11px;
  padding: 2px 6px;
}

/* Buttons inside cards: smaller touch targets but still usable */
.inventory-grid ion-button {
  --padding-start: 0.3rem;
  --padding-end: 0.3rem;
  height: 30px;
}

/* Slight adjustments to make text clearer but compact */
.inventory-grid .card__title span {
  display: block;
  font-size: calc(var(--inventory-card-font-size) - 1px);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.inventory-grid .qty__value {
  font-size: calc(var(--inventory-card-font-size) + 1px);
}

/* Mobile: 2 columns for small phones */
@media (max-width: 479px) {
  .inventory {
    --inventory-columns: 2;
    --inventory-card-image-height: 56px;
    --inventory-card-font-size: 11px;
    --inventory-gap: 6px;
    --inventory-card-padding: 6px;
  }
  .inventory-grid { grid-template-columns: repeat(var(--inventory-columns), 1fr); }
  .content > .inventory { --approx-card-height: calc(var(--inventory-card-image-height) + 72px); max-height: calc(var(--approx-card-height) * 4); }
}

/* Small tablets: 3 columns (phones in landscape / small tablets) */
@media (min-width: 480px) and (max-width: 767px) {
  .inventory {
    --inventory-columns: 3;
    --inventory-card-image-height: 64px;
    --inventory-card-font-size: 12px;
    --inventory-gap: 8px;
  }
  .inventory-grid { grid-template-columns: repeat(var(--inventory-columns), 1fr); }
  .content > .inventory { --approx-card-height: calc(var(--inventory-card-image-height) + 76px); max-height: calc(var(--approx-card-height) * 4); }
}

/* iPad and larger tablets: 4 columns */
@media (min-width: 768px) and (max-width: 1199px) {
  .inventory {
    --inventory-columns: 4;
    --inventory-card-image-height: 72px;
    --inventory-card-font-size: 13px;
    --inventory-gap: 10px;
  }
  .inventory-grid { grid-template-columns: repeat(var(--inventory-columns), 1fr); }
  .content > .inventory { --approx-card-height: calc(var(--inventory-card-image-height) + 88px); max-height: calc(var(--approx-card-height) * 4); }
}

/* Large desktops: 5 columns */
@media (min-width: 1200px) {
  .inventory {
    --inventory-columns: 5;
    --inventory-card-image-height: 80px;
    --inventory-card-font-size: 14px;
    --inventory-gap: 12px;
  }
  .inventory-grid { grid-template-columns: repeat(var(--inventory-columns), 1fr); }
  .content > .inventory { --approx-card-height: calc(var(--inventory-card-image-height) + 96px); max-height: calc(var(--approx-card-height) * 4); }
}

.inventory-title {
  color: #222;
  font-weight: 500;
  font-size: 1.2em;
  margin-bottom: 8px;
}

.inventory-details {
  color: #555;
  font-size: 1em;
}

// =====================
// CARD STYLING
// =====================
.card {
  background: var(--card);
  border: 1px solid var(--card-border);
  border-radius: var(--radius);
  box-shadow: 0 1px 2px rgba(15, 23, 42, .06);
  margin-bottom: 16px;
  padding: 16px;
  color: #111;

  ion-card-content {
    padding-top: .25rem;
  }

  &__title {
    margin: .5rem .25rem .25rem;
    font-size: 1rem;
    font-weight: 600;
    color: #111;
    display: flex;
    align-items: center;
    gap: 8px;
    justify-content: center;

    &-icon {
      font-size: 18px;
      opacity: .8;
    }
  }

  &__rename ion-input {
    --padding-start: 0;
  }

  &__controls {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: .25rem;
    padding: .25rem;

    ion-button[fill="clear"] {
      --padding-start: .5rem;
      --padding-end: .5rem;
      border-radius: 999px;
    }
  }

  // =====================
  // IMAGE WRAPPER
  // =====================
  &__imgwrap {
    position: relative;
    height: 110px;
    border-radius: 12px;
    overflow: hidden;
    background: #ffffff;
    display: flex;
    align-items: center;
    justify-content: center;

    img {
      max-width: 80%;
      max-height: 80%;
      object-fit: contain;
      display: block;
    }

    // ðŸ’¥ Wenn Foto statt Icon: Cover Mode aktivieren
    &--cover img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      max-width: unset;
      max-height: unset;
    }
  }

  &__badge {
    display: block;
    margin: .5rem auto 0;
    font-size: .9rem;
    background-color: white;
    padding: .1rem .5rem;
    border-radius: 999px;
    text-align: center;
  }

  .card__badge-wrap {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: .5rem;
  }

  .editable-badge {
    cursor: pointer;
    transition: box-shadow .12s ease, transform .08s ease;
  }

  .editable-badge:hover,
  .editable-badge:focus {
    box-shadow: 0 0 0 3px rgba(34,197,94,0.12);
    transform: translateY(-1px);
    outline: none;
  }

  .expiry-editor {
    display: flex;
    align-items: center;
    gap: .25rem;

    input[type="date"] {
      border: 1px solid #e5e7eb;
      padding: .25rem .4rem;
      border-radius: 6px;
      background: white;
      font-size: .9rem;
    }

    ion-button {
      --padding-start: .4rem;
      --padding-end: .4rem;
    }
  }

  &.expired, &.expired &__badge {
    border-color: #f87171;
  }
}

/* stronger rule for expired badge text/background */
.card.expired .card__badge {
  background-color: #fee2e2;
  color: #991b1b;
  border: 1px solid #fecaca;
}

/* icon elements removed from template; badge colors indicate state now */

// =====================
// EXPIRING SOON (warning) styles
// =====================
.card.expiring-soon {
  border-color: #ffd54f; // amber border
}

.card.expiring-soon .card__badge {
  background-color: #fff8e1; // light yellow
  color: #8a6d00; // dark amber text
  border: 1px solid #ffecb3;
}

.expiring-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  margin-left: 8px;
}
/* cleaned up: fills are applied with more specific selectors above to avoid being overridden */

// =====================
// QTY (Anzahl-Anzeige)
// =====================
.qty {
  display: flex;
  align-items: baseline;
  gap: .4rem;
  font-variant-numeric: tabular-nums;

  &__value {
    font-weight: 600;
  }

  &__unit {
    font-size: .8rem;
    color: var(--muted);
  }
}

// =====================
// SEARCHBAR
// =====================
.searchbar {
  background: #eef8ef;
  border-bottom: 1px solid #dde9de;

  .searchbar-input-container {
    padding-left: .5rem;
    padding-right: .5rem;
  }

  &__actions {
    margin-right: .5rem;
    display: flex;
    align-items: center;

    ion-button {
      --padding-start: .4rem;
      --padding-end: .4rem;
      margin-left: .25rem;
    }
  }
}

.topbar .right-actions {
  display: flex;
  align-items: center;

  ion-button {
    --padding-start: .5rem;
    --padding-end: .5rem;
    margin-left: .25rem;
  }
}

// =====================
// CONTENT
// =====================
.content {
  padding: .75rem;
}

// =====================
// FILTER CHIPS
// =====================
.filter-chip-row {
  display: flex;
  flex-wrap: wrap;
  gap: .4rem;
  margin: .5rem 0;

  ion-chip {
    --background: #f5f5f5;
    --border-color: #e5e7eb;
    border: 1px solid var(--border-color);
  }
}

// Add Button
.fab-with-tabs {
  position: fixed !important;
  bottom: 20px !important; // 20px Ã¼ber den Tabs
  right: 40px !important;
  z-index: 999 !important;
  
  ion-fab-button {
    --box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);
    --transition: transform 0.2s ease;
    
    &:hover {
      --transform: scale(1.1);
    }
  }
}

.custom-list {
  background: var(--ion-color-success);
  border: none;
}

.card.highlighted {
  box-shadow: 0 8px 30px rgba(34,197,94,0.15);
  border: 2px solid rgba(34,197,94,0.18);
  transform: translateY(-4px);
}

/* flash color for expired items when navigated to - color-only blink (no movement) */
@keyframes flashExpired {
  0% { background-color: #ffffff; }
  50% { background-color: #919191; } 
  100% { background-color: #ffffff; }
}

.card.flash-expired {
  animation: flashExpired 1.2s ease-in-out;
}

/* also animate the image wrapper inside the card so the exact element flashes as requested */
.card.flash-expired .card__imgwrap {
  animation: flashExpired 1.2s ease-in-out;
}